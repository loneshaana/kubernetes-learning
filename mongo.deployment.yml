apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  # persistentVolumeReclaimPolicy: Recycle
  storageClassName: local-storage
  local:
    path: /tmp/data/db
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-destop
  # mountOptions:
  #   - hard
  #   - nfsvers=4.1
  # nfs:
  #   path: /tmp
  #   server: 172.17.0.2
  
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage

---

kind: Service
apiVersion: v1
metadata:
  name:  mongo
spec:
  selector:
    app:  mongo
  # type:  LoadBalancer | ClusterIP | NodePort
  ports:
  - name:  mongo-port
    port:  27017
    targetPort:  27017

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
          name: mongo
        command:
          - mongod
          - "--auth"
        resources: {}
        volumeMounts:
        - name: mongo-volume
          mountPath: /data/db
        env:
          - name: MONGODB_DBNAME
            valueFrom:
              configMapKeyRef:
                key: MONGODB_DB_NAME
                name: mongo-env
          - name: MONGODB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: MONGODB_PASSWORD
                name: mongo-env
          - name: MONGODB_ROLE
            valueFrom:
              configMapKeyRef:
                key: MONGODB_ROLE
                name: mongo-env
          - name: MONGODB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: MONGODB_USERNAME
                name: mongo-env

      volumes:
        - name:  mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc
    # mountPath:  Path to mount

  # volumeClaimTemplates:
  # - metadata:
  #     name: www
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 1Gi
